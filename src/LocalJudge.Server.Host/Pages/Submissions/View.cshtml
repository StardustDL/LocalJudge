@page
@model LocalJudge.Server.Host.Pages.Submissions.ViewModel
@{
    ViewData["Title"] = "View";
}

@section header{
    <link rel="stylesheet" data-name="vs/editor/editor.main" href="../lib/monaco-editor/min/vs/editor/editor.main.css">
}

<h1>Submission @Html.DisplayFor(model => model.Metadata.Id)</h1>

<div class="row">
    <div class="col-9">
        <h2>Code</h2>

        <pre id="rawCode" style="display:none">@Html.DisplayFor(model=>model.Code)</pre>
        <div id="code" style="min-height:500px"></div>

        <br />

        <h2>Result</h2>

        <br />

        @if (Model.Result != null)
        {
            <h3>@Html.DisplayFor(model => model.Result.State)</h3>
            <br />
            @if (Model.Result.Samples?.Count > 0)
            {
                <h3>Sample Cases</h3>
                <table class="table table-sm table-bordered">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Samples[0].Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Samples[0].State)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Samples[0].Time)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Samples[0].Memory)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Result.Samples)
                        {
                            <tr>
                                <td>
                                    @item.Id
                                </td>
                                <td>
                                    @item.State
                                </td>
                                <td>
                                    @item.Time.TotalSeconds s
                                </td>
                                <td>
                                    @((double)item.Memory / 1024 / 1024) MB
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
            }
            @if (Model.Result.Tests?.Count > 0)
            {
                <h3>Test Cases</h3>
                <table class="table table-sm table-bordered">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Tests[0].Id)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Tests[0].State)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Tests[0].Time)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Result.Tests[0].Memory)
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Result.Tests)
                        {
                            <tr>
                                <td>
                                    @item.Id
                                </td>
                                <td>
                                    @item.State
                                </td>
                                <td>
                                    @item.Time.TotalSeconds s
                                </td>
                                <td>
                                    @((double)item.Memory / 1024 / 1024) MB
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <br />
            }
            <h3>Issues</h3>
            <ul>
                @foreach (var item in Model.Result.Issues)
                {
                    <li>@item.Content</li>
                }
                @for (int i = 0; i < Model.Result.Samples.Count; i++)
                {
                    var ci = Model.Result.Samples[i];
                    @foreach (var item in ci.Issues)
                    {
                        <li>Sample @i: @item.Content</li>
                    }
                }
                @for (int i = 0; i < Model.Result.Tests.Count; i++)
                {
                    var ci = Model.Result.Samples[i];
                    @foreach (var item in ci.Issues)
                    {
                        <li>Test @i: @item.Content</li>
                    }
                }
            </ul>
        }
        else
        {
            <p>Pending now...</p>
        }
    </div>
    <div class="col-3">
        <dl>
            <dt>@Html.DisplayNameFor(model => model.Metadata.ProblemID)</dt>
            <dd><a asp-page="../Problems/View" asp-route-id="@Model.Metadata.ProblemID">@Html.DisplayFor(model => model.Metadata.ProblemID)</a></dd>
            <dt>@Html.DisplayNameFor(model => model.Metadata.Language)</dt>
            <dd>@Html.DisplayFor(model => model.Metadata.Language)</dd>
            <dt>@Html.DisplayNameFor(model => model.Metadata.Time)</dt>
            <dd>@Html.DisplayFor(model => model.Metadata.Time)</dd>
        </dl>
    </div>
</div>

@section scripts{
    <script>var require = { paths: { 'vs': '../lib/monaco-editor/min/vs' } }</script>
    <script src="../lib/monaco-editor/min/vs/loader.js"></script>
    <script src="../lib/monaco-editor/min/vs/editor/editor.main.nls.js"></script>
    <script src="../lib/monaco-editor/min/vs/editor/editor.main.js"></script>
    <script>
        var editor = monaco.editor.create(document.getElementById("code"), {
            value: document.getElementById("rawCode").innerText,
            language: "cpp",
            roundedSelection: false,
            readOnly: true,
        });
    </script>
}
